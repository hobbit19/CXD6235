
git reset


--soft

	会将HEAD引用指向给定提交。索引和工作目录内容保持不变。

--mixed
	会将HEAD指向给定提交。索引内容也跟着以符合给定提交的树结构，但是工作目录中的内容保持不变。

--hard
	
	会将HEAD指向给定提交。索引内容也跟着改变以符合给定提交的树结构。此外，工作目录的内容也随着改变以反映给定提交表示的树的状态。


这三者均会将HEAD引用指向给定提交。如果给定提交不在当前分支上，有可能会产生不可预料的结果.

所以，要进行reset操作，需要先切分支，再reset。

如果因为这个误操作产生错误。有一个补救措施。

	git reflog

	git reset --hard HEAD@{4}



git cherry-pick

通常用于把版本库中的一个分支的特定提交引入到一个不同的分支中。


git revert

用于引入一个新提交来抵消给定提交的影响。


git commit --amend

在刚做出一个提交后修改录入错误。这不是唯一的用途，然而对于任何提交，这条命令可以修改版本库中的任何文件，事实上可以作为新提交的一部分添加或删除文件。
先修改文件，再git add 文件，然后再 git commit --amend --no-t



git rebase

用来改变一串提交以什么为基础的。


--onto选项把一套分支上的开发线整个移植到完全不同的分支上。

--continue恢复变基操作
--skip跳过这个提交
--abort中止操作